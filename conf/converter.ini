_419 a.startswith.W[_extract(1,*-1)_419 a_025x _
_ _set_997x _W628_
_ _format_997x _W08d_
_ _suffix_997x _W......_
_ _prefix_997x _WSORT: _
_ _assign(LANG)_037z _037b _
_ _piece(2,|)_030  _030x _
_ _copy_419 b_V420_
_ _set_420xa_V420_


#_ _set_029m _WB_

#_ _piece(1,|)_051  _VNOT1_
#_VNOT1.contains.m_set_VNOT2_Wm_
#_076d .==.muno_set_VNOT3_Wmuno_
#_ _prefix_VNOT3_VNOT2_
#_VNOT3.==.mmuno_set_029m _WNOT_

#_ _piece(6,|)_050  _VCD1_
#_VCD1.contains.a_set_VCD2_Wa_
#_076d .==.muto_set_VCD3_Wmuto_
#_ _prefix_VCD3_VCD2_
#_VCD3.==.amuto_set_029m _WCD_

#_ _piece(9,|)_050  _VFILE1_
#_VFILE1.contains.g_set_029m _WFILE_

#_ _piece(9,|)_050  _VZSE1_
#_VZSE1.contains.g_set_VZSE2_Wg_
#_076b .==.zd_set_VZSE3_Wzd_
#_ _prefix_VZSE3_VZSE2_
#_VZSE3.==.gzd_set_029m _WZSE_

#_076b .==.se_set_029m _WMB_
#_076b .==.mb_set_029m _WMB_
#_076b .==.zd_set_029m _WZS_

#_076b .==.zd_copy_029m _029x _

#_ _copy_655e3 _088z _
#_ _copy_655eu _088a _
#_ _copy_303t _304 _
#_ _copy_419a _410 _
#_ _copy_419b _412 _
#_ _copy_419c _425 _

#_070a .==.BSZ_set_029m _WMB_
#_070a .==.GBV_set_029m _WZS_

#_ _set_009 a_WEins_
#_ _set_009 b_WZwei_
#_ _set_009 c_WDrei_
#_ _add_009 a_WSieben_
#_009 a.==.Sieben_set_009 b_WAcht_
#_009 a.==.Sieben_copy_009 _010x _
#_009 a.==.Sieben_set_Ve8_009 b_
#_ _set_011a _Ve8_
#_ _copy_009 c_012m _
#_ _copy_001  _001x _
#_ _copy_060  _060x _


# Regeln
#_520 b.==.Dissertation_set_VDiss_WHochschulschrift_
#_ _set_521 x_VDiss_
#_ _copy_520 b_VQuelle_
#_ _set_529a _VQuelle_
#_ _set_520 b_WDoktorArbeit_
#_ _set_520 2_VDiss_

#_ _set_Vxyz_050  _
#_ _set_050x _Vxyz_
#_ _piece(2,|)_052  _Vp2_
#_Vp2.!=._set_050z _Vp2_

#_ _set_VSprache_W_
#_ _set_037a _VSprache_
#_037b .contains.ger_suffix_VSprache_WDeutsch _
#_037b .contains.eng_suffix_VSprache_WEnglisch _
#_037b .contains.swe_suffix_VSprache_WSchwedisch _
#_VSprache.!contains.sch_set_VSpracheCode_037b _
#_VSprache.!contains.sch_set_VSprache_Wunknown_
#_ _set_037x _VSpracheCode_
#_ _set_037y _VSprache_

#_ _copy_076a _077u _
#_076a .==.SAXB_suffix_076a _W Saxonica_

# AND - Nachbildung => test1 -> V = 1 ; test2 -> suffix V 1 ; erg 0, 1 oder 11 (11 ist TRUE)
# OR - Nachbildung => test1 -> V = 1 ; test2 -> V = 1 ; erg 0, 1 (1 ist TRUE)
# NOT Ã¼ber !=

#_ _set_060xa_Wtest_
#_ _set_Vtest_060 a_
#_ _set_060xx_Vtest_
#_ _set_Vtest_060 b_
#_ _set_060xy_Vtest_

#_ _copy_540a _541a_

#_037b .==.ger_export_WmabY.txt_ _

#_ _piece(2,|)_050  _Ve1_
#_ _piece(1,|)_051  _Ve2_
#_Ve1.in.(x,b,v)_set_029o _W######################
#_ _set_Ve3_Wb_
#_Ve1.==.Ve3_set_029n _WHallo
#_ _prefix_Ve2_Ve1_
#_ _assign(Medtyp)_029m _Ve2
#_Ve2.==.bs_set_029m _WBS-DATEI_
